<?php
/**
 * ProductSeriesStruct
 *
 * PHP version 5
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing API
 *
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ZzyLsg\TencentAds\Model;

use \ArrayAccess;
use \ZzyLsg\TencentAds\ObjectSerializer;

/**
 * ProductSeriesStruct Class Doc Comment
 *
 * @category Class
 * @description 商品系列信息
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProductSeriesStruct implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'product_series_struct';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'productSeriesId' => 'int',
        'productSeriesName' => 'string',
        'productSeriesDescription' => 'string',
        'productSeriesType' => '\TencentAds\Model\ProductSeriesType',
        'productSeries' => '\TencentAds\Model\ProductSeriesSpec'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'productSeriesId' => 'int64',
        'productSeriesName' => null,
        'productSeriesDescription' => null,
        'productSeriesType' => null,
        'productSeries' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'productSeriesId' => 'product_series_id',
        'productSeriesName' => 'product_series_name',
        'productSeriesDescription' => 'product_series_description',
        'productSeriesType' => 'product_series_type',
        'productSeries' => 'product_series'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'productSeriesId' => 'setProductSeriesId',
        'productSeriesName' => 'setProductSeriesName',
        'productSeriesDescription' => 'setProductSeriesDescription',
        'productSeriesType' => 'setProductSeriesType',
        'productSeries' => 'setProductSeries'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'productSeriesId' => 'getProductSeriesId',
        'productSeriesName' => 'getProductSeriesName',
        'productSeriesDescription' => 'getProductSeriesDescription',
        'productSeriesType' => 'getProductSeriesType',
        'productSeries' => 'getProductSeries'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['productSeriesId'] = isset($data['productSeriesId']) ? $data['productSeriesId'] : null;
        $this->container['productSeriesName'] = isset($data['productSeriesName']) ? $data['productSeriesName'] : null;
        $this->container['productSeriesDescription'] = isset($data['productSeriesDescription']) ? $data['productSeriesDescription'] : null;
        $this->container['productSeriesType'] = isset($data['productSeriesType']) ? $data['productSeriesType'] : null;
        $this->container['productSeries'] = isset($data['productSeries']) ? $data['productSeries'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets productSeriesId
     *
     * @return int|mixed
     */
    public function getProductSeriesId()
    {
        return $this->container['productSeriesId'];
    }

    /**
     * Sets productSeriesId
     *
     * @param int|mixed $productSeriesId productSeriesId
     *
     * @return $this
     */
    public function setProductSeriesId($productSeriesId)
    {
        $this->container['productSeriesId'] = $productSeriesId;

        return $this;
    }

    /**
     * Gets productSeriesName
     *
     * @return string|mixed
     */
    public function getProductSeriesName()
    {
        return $this->container['productSeriesName'];
    }

    /**
     * Sets productSeriesName
     *
     * @param string|mixed $productSeriesName productSeriesName
     *
     * @return $this
     */
    public function setProductSeriesName($productSeriesName)
    {
        $this->container['productSeriesName'] = $productSeriesName;

        return $this;
    }

    /**
     * Gets productSeriesDescription
     *
     * @return string|mixed
     */
    public function getProductSeriesDescription()
    {
        return $this->container['productSeriesDescription'];
    }

    /**
     * Sets productSeriesDescription
     *
     * @param string|mixed $productSeriesDescription productSeriesDescription
     *
     * @return $this
     */
    public function setProductSeriesDescription($productSeriesDescription)
    {
        $this->container['productSeriesDescription'] = $productSeriesDescription;

        return $this;
    }

    /**
     * Gets productSeriesType
     *
     * @return \TencentAds\Model\ProductSeriesType|mixed
     */
    public function getProductSeriesType()
    {
        return $this->container['productSeriesType'];
    }

    /**
     * Sets productSeriesType
     *
     * @param \TencentAds\Model\ProductSeriesType|mixed $productSeriesType productSeriesType
     *
     * @return $this
     */
    public function setProductSeriesType($productSeriesType)
    {
        $this->container['productSeriesType'] = $productSeriesType;

        return $this;
    }

    /**
     * Gets productSeries
     *
     * @return \TencentAds\Model\ProductSeriesSpec|mixed
     */
    public function getProductSeries()
    {
        return $this->container['productSeries'];
    }

    /**
     * Sets productSeries
     *
     * @param \TencentAds\Model\ProductSeriesSpec|mixed $productSeries productSeries
     *
     * @return $this
     */
    public function setProductSeries($productSeries)
    {
        $this->container['productSeries'] = $productSeries;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


